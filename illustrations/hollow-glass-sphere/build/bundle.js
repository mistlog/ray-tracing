var app=function(t){"use strict";function n(){}function e(t){return t()}function r(){return Object.create(null)}function o(t){t.forEach(e)}function c(t){return"function"==typeof t}function a(t,n){return t!=t?n==n:t!==n||t&&"object"==typeof t||"function"==typeof t}function i(t){return document.createElement(t)}function s(t,n,e){null==e?t.removeAttribute(n):t.getAttribute(n)!==e&&t.setAttribute(n,e)}let l;function u(t){l=t}function d(t){(function(){if(!l)throw new Error("Function called outside component initialization");return l})().$$.on_mount.push(t)}const h=[],f=[],m=[],p=[],w=Promise.resolve();let g=!1;function b(t){m.push(t)}const y=new Set;function $(){do{for(;h.length;){const t=h.shift();u(t),V(t.$$)}for(;f.length;)f.pop()();for(let t=0;t<m.length;t+=1){const n=m[t];y.has(n)||(y.add(n),n())}m.length=0}while(h.length);for(;p.length;)p.pop()();g=!1,y.clear()}function V(t){if(null!==t.fragment){t.update(),o(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(b)}}const x=new Set;function M(t,n){-1===t.$$.dirty[0]&&(h.push(t),g||(g=!0,w.then($)),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}function v(t,a,i,s,d,h,f=[-1]){const m=l;u(t);const p=a.props||{},w=t.$$={fragment:null,ctx:null,props:h,update:n,not_equal:d,bound:r(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(m?m.$$.context:[]),callbacks:r(),dirty:f};let g=!1;var y,V;w.ctx=i?i(t,p,(n,e,...r)=>{const o=r.length?r[0]:e;return w.ctx&&d(w.ctx[n],w.ctx[n]=o)&&(w.bound[n]&&w.bound[n](o),g&&M(t,n)),e}):[],w.update(),g=!0,o(w.before_update),w.fragment=!!s&&s(w.ctx),a.target&&(a.hydrate?w.fragment&&w.fragment.l(function(t){return Array.from(t.childNodes)}(a.target)):w.fragment&&w.fragment.c(),a.intro&&((y=t.$$.fragment)&&y.i&&(x.delete(y),y.i(V))),function(t,n,r){const{fragment:a,on_mount:i,on_destroy:s,after_update:l}=t.$$;a&&a.m(n,r),b(()=>{const n=i.map(e).filter(c);s?s.push(...n):o(n),t.$$.on_mount=[]}),l.forEach(b)}(t,a.target,a.anchor),$()),u(m)}class _{constructor(){this.objects=[]}hit(t,n){let e=n.max,r=null;return this.objects.forEach(o=>{const c=o.hit(t,{min:n.min,max:e});c&&(e=c.distance,r=c)}),r}addObject(t){return this.objects.push(t),this}}class z{constructor(t,n,e){this.center=t,this.radius=n,this.material=e}hit(n,e){const r=n.origin.clone().sub(this.center),o=n.direction.dot(n.direction),c=2*r.dot(n.direction),a=c*c-4*o*(r.dot(r)-this.radius*this.radius);if(a>=0){const r=[(-c-Math.sqrt(a))/(2*o),(-c+Math.sqrt(a))/(2*o)];for(const o of r)if(o>e.min&&o<e.max){const e=n.at(o,new t.Vector3),r=e.clone().sub(this.center).divideScalar(this.radius),c=r.dot(n.direction)<0;return{distance:o,point:e,normal:c?r:r.negate(),isFrontFace:c,material:this.material}}}return null}}class S{constructor(){this.topLeftCorner=new t.Vector3(-2,-1,1),this.horizontal=new t.Vector3(4,0,0),this.vertical=new t.Vector3(0,2,0),this.origin=new t.Vector3(0,0,0)}getRay(n,e){const r=this.topLeftCorner.clone().addScaledVector(this.horizontal,n).addScaledVector(this.vertical,e).sub(this.origin);return new t.Ray(this.origin,r)}}function j(t,n){return t+Math.random()*(n-t)}class q{constructor(t){this.albedo=t}scatter(n,e){const r=e.normal.clone().add(function(){const n=j(0,2*Math.PI),e=j(-1,1),r=Math.sqrt(1-e*e);return new t.Vector3(r*Math.cos(n),r*Math.sin(n),e)}());return{attenuation:this.albedo,scattered:new t.Ray(e.point,r)}}}class E{constructor(t,n){this.albedo=t,this.fuzz=n}scatter(n,e){const r=n.direction.clone().normalize().reflect(e.normal.clone().normalize()),o=new t.Ray(e.point,r.add(function(){for(;;){const r=(n=-1,e=1,new t.Vector3(j(n,e),j(n,e),j(n,e)));if(r.length()<1)return r}var n,e}().multiplyScalar(this.fuzz)));return{attenuation:this.albedo,scattered:o.direction.dot(e.normal)>0?o:null}}}class R{constructor(t){this.refractiveIndex=t}scatter(n,e){const r=new t.Vector3(1,1,1),o=e.isFrontFace?1/this.refractiveIndex:this.refractiveIndex,c=n.direction.clone().normalize(),a=e.normal.clone().normalize(),i=Math.min(-c.dot(a),1),s=Math.sqrt(1-i*i),l=this.schlick(i,o);if(o*s>1||Math.random()<l){const n=c.clone().reflect(a);return{attenuation:r,scattered:new t.Ray(e.point,n)}}const u=c.clone().add(a.clone().multiplyScalar(i)).multiplyScalar(o),d=a.clone().multiplyScalar(-Math.sqrt(1-u.lengthSq())),h=u.add(d);return{attenuation:r,scattered:new t.Ray(e.point,h)}}schlick(t,n){const e=Math.pow((1-n)/(1+n),2);return e+(1-e)*Math.pow(1-t,5)}}function O(t){let e,r;return{c(){e=i("div"),r=i("canvas"),s(r,"width",I),s(r,"height",A),s(e,"class","container svelte-1nnd0qh")},m(n,o){!function(t,n,e){t.insertBefore(n,e||null)}(n,e,o),function(t,n){t.appendChild(n)}(e,r),t[1](r)},p:n,i:n,o:n,d(n){var r;n&&(r=e).parentNode.removeChild(r),t[1](null)}}}let I=600,A=300;function F(n,e,r){let o;return d(()=>{function n(e,r,o){if(o<=0)return new t.Vector3(0,0,0);const c=r.hit(e,{min:.001,max:Number.MAX_SAFE_INTEGER});if(c){const{scattered:a,attenuation:i}=c.material.scatter(e,c);if(a){return n(a,r,o-1).multiply(i)}return new t.Vector3(0,0,0)}const a=.5*(e.direction.clone().normalize().y+1);return new t.Vector3(.5,.7,1).lerp(new t.Vector3(1,1,1),a)}const e=o.width,r=o.height,c=o.getContext("2d"),a=c.getImageData(0,0,e,r),i=(new _).addObject(new z(new t.Vector3(0,0,1),.5,new q(new t.Vector3(.1,.2,.5)))).addObject(new z(new t.Vector3(0,100.5,1),100,new q(new t.Vector3(.8,.8,0)))).addObject(new z(new t.Vector3(1,0,1),.5,new E(new t.Vector3(.8,.6,.2),.3))).addObject(new z(new t.Vector3(-1,0,1),.5,new R(1.5))).addObject(new z(new t.Vector3(-1,0,1),-.45,new R(1.5))),s=new S;for(let o=0;o<e;++o)for(let c=0;c<r;++c){const l=new t.Vector3(0,0,0);for(let t=0;t<50;++t){const t=(o+Math.random())/e,a=(c+Math.random())/r,u=s.getRay(t,a);l.add(n(u,i,50))}l.divideScalar(50);const u=Math.sqrt(l.x),d=Math.sqrt(l.y),h=Math.sqrt(l.z),f=4*(c*e+o);a.data[f]=255*u,a.data[f+1]=255*d,a.data[f+2]=255*h,a.data[f+3]=255}c.putImageData(a,0,0)}),[o,function(t){f[t?"unshift":"push"](()=>{r(0,o=t)})}]}return new class extends class{$destroy(){!function(t,n){const e=t.$$;null!==e.fragment&&(o(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}(this,1),this.$destroy=n}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(){}}{constructor(t){super(),v(this,t,F,O,a,{})}}({target:document.body})}(THREE);
